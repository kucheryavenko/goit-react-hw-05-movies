{"version":3,"file":"static/js/544.67fac1fb.chunk.js","mappings":"kOAKMA,EAAkB,IAAIC,EAAAA,EA6C5B,UA3Ca,WACX,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KA0BA,IAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,sGAErBF,EAAU,WAFW,SAIEN,EAAgBS,qBAJlB,mBAMD,KAFZC,EAJa,EAIbA,MAECC,OANY,wBAOnBC,EAAAA,GAAAA,MAAY,kDACZN,EAAU,YARS,2BAYrBA,EAAU,YACVF,EAAkBM,EAAKG,SAbF,kDAerBC,QAAQC,IAAR,MACAT,EAAU,YAhBW,0DAAH,qDAoBtBE,GACD,GAAE,IAEoB,OAAnBL,EAIJ,OACE,6BACE,2CACCA,EAAeQ,OAAS,IACvB,SAAC,KAAD,CAAYK,OAAQb,EAAgBc,KAAM,YAEhC,YAAXZ,IAAwB,SAAC,KAAD,MAG9B,C,iIC/CDa,EAAAA,EAAAA,SAAAA,QAAyB,gCAAzB,0EAEajB,EAAb,wFACa,qCADb,gDAEgB,UAFhB,gDAGiB,OAHjB,qFAKE,oGACyBiB,EAAAA,EAAAA,IAAA,2BACTC,KADS,0BACWA,KADX,OAErB,CACEC,OAAQ,CACNC,SAAQ,OAACF,KAAF,SALf,cACQG,EADR,yBAUSA,GAVT,gDALF,uHAkBE,WAAuBC,GAAvB,8EACEJ,KAAKK,MAAQD,EADf,SAEyBL,EAAAA,EAAAA,IAAA,eAA0B,CAC/CE,OAAQ,CACNC,SAAQ,OAACF,KAAF,MACPK,MAAOL,KAAKK,SALlB,cAEQF,EAFR,yBASSA,GATT,gDAlBF,sHA8BE,WAAqBG,GAArB,gFACQC,EAAKC,OAAOF,GADpB,SAEyBP,EAAAA,EAAAA,IAAA,gBAAmBQ,GAAM,CAC9CN,OAAQ,CACNC,SAAQ,OAACF,KAAF,SAJb,cAEQG,EAFR,yBAQSA,GART,gDA9BF,iHAyCE,WAAgBM,GAAhB,uFACyBV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,YAAiC,CACtDR,OAAQ,CACNC,SAAQ,OAACF,KAAF,SAHb,cACQG,EADR,yBAOSA,GAPT,gDAzCF,oHAmDE,WAAmBM,GAAnB,uFACyBV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,YAAiC,CACtDR,OAAQ,CACNC,SAAQ,OAACF,KAAF,SAHb,cACQG,EADR,yBAOSA,GAPT,gDAnDF,6D","sources":["pages/Home/Home.jsx","services/movieApiService.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { ListMovies, Loader } from 'components';\nimport { MovieApiService } from 'services/movieApiService';\n\nconst movieApiService = new MovieApiService();\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const getTrendingMovie = async () => {\n      try {\n        setStatus('pending');\n\n        const { data } = await movieApiService.fetchTrendingMovie();\n\n        if (data.length === 0) {\n          toast.error('Ooops, someting went wrong. Please, try again.');\n          setStatus('rejected');\n          return;\n        }\n\n        setStatus('resolved');\n        setTrendingMovies(data.results);\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    };\n\n    getTrendingMovie();\n  }, []);\n\n  if (trendingMovies === null) {\n    return;\n  }\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {trendingMovies.length > 0 && (\n        <ListMovies movies={trendingMovies} path={'movies/'} />\n      )}\n      {status === 'pending' && <Loader />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport class MovieApiService {\n  #KEY_API = '28d4f8ff1e1282fe32fa07ec61034261';\n  #MEDIA_TYPE = 'movie';\n  #TIME_WINDOW = 'day';\n\n  async fetchTrendingMovie() {\n    const response = await axios.get(\n      `trending/${this.#MEDIA_TYPE}/${this.#TIME_WINDOW}`,\n      {\n        params: {\n          api_key: this.#KEY_API,\n        },\n      }\n    );\n\n    return response;\n  }\n\n  async fetchSearchMovie(searchQuery) {\n    this.query = searchQuery;\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: this.#KEY_API,\n        query: this.query,\n      },\n    });\n\n    return response;\n  }\n\n  async fetchMovieById(movieId) {\n    const ID = Number(movieId);\n    const response = await axios.get(`movie/${ID}`, {\n      params: {\n        api_key: this.#KEY_API,\n      },\n    });\n\n    return response;\n  }\n\n  async fetchCast(id) {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: this.#KEY_API,\n      },\n    });\n\n    return response;\n  }\n\n  async fetchReviews(id) {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: this.#KEY_API,\n      },\n    });\n\n    return response;\n  }\n}\n"],"names":["movieApiService","MovieApiService","useState","trendingMovies","setTrendingMovies","status","setStatus","useEffect","getTrendingMovie","fetchTrendingMovie","data","length","toast","results","console","log","movies","path","axios","this","params","api_key","response","searchQuery","query","movieId","ID","Number","id"],"sourceRoot":""}