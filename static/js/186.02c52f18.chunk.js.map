{"version":3,"file":"static/js/186.02c52f18.chunk.js","mappings":"yNAIMA,EAAkB,IAAIC,EAAAA,EAsC5B,UApCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+GAEQR,EAAgBS,aAAaJ,GAFrC,gBAEPK,EAFO,EAEPA,KACRN,EAAWM,EAAKC,SAHD,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAQhBL,GACD,GAAE,CAACH,KAGF,8BACsB,IAAnBF,EAAQW,QACP,wBACGX,EAAQY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EAKZ,OAGH,sEAIP,C,iICvCDG,EAAAA,EAAAA,SAAAA,QAAyB,gCAAzB,0EAEalB,EAAb,wFACa,qCADb,gDAEgB,UAFhB,gDAGiB,OAHjB,qFAKE,oGACyBkB,EAAAA,EAAAA,IAAA,2BACTC,KADS,0BACWA,KADX,OAErB,CACEC,OAAQ,CACNC,SAAQ,OAACF,KAAF,SALf,cACQG,EADR,yBAUSA,GAVT,gDALF,uHAkBE,WAAuBC,GAAvB,8EACEJ,KAAKK,MAAQD,EADf,SAEyBL,EAAAA,EAAAA,IAAA,eAA0B,CAC/CE,OAAQ,CACNC,SAAQ,OAACF,KAAF,MACPK,MAAOL,KAAKK,SALlB,cAEQF,EAFR,yBASSA,GATT,gDAlBF,sHA8BE,WAAqBlB,GAArB,gFACQqB,EAAKC,OAAOtB,GADpB,SAEyBc,EAAAA,EAAAA,IAAA,gBAAmBO,GAAM,CAC9CL,OAAQ,CACNC,SAAQ,OAACF,KAAF,SAJb,cAEQG,EAFR,yBAQSA,GART,gDA9BF,iHAyCE,WAAgBP,GAAhB,uFACyBG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,YAAiC,CACtDK,OAAQ,CACNC,SAAQ,OAACF,KAAF,SAHb,cACQG,EADR,yBAOSA,GAPT,gDAzCF,oHAmDE,WAAmBP,GAAnB,uFACyBG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,YAAiC,CACtDK,OAAQ,CACNC,SAAQ,OAACF,KAAF,SAHb,cACQG,EADR,yBAOSA,GAPT,gDAnDF,6D","sources":["components/Reviews/Reviews.jsx","services/movieApiService.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MovieApiService } from 'services/movieApiService';\n\nconst movieApiService = new MovieApiService();\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const { data } = await movieApiService.fetchReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h4>Author: {author}</h4>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport class MovieApiService {\n  #KEY_API = '28d4f8ff1e1282fe32fa07ec61034261';\n  #MEDIA_TYPE = 'movie';\n  #TIME_WINDOW = 'day';\n\n  async fetchTrendingMovie() {\n    const response = await axios.get(\n      `trending/${this.#MEDIA_TYPE}/${this.#TIME_WINDOW}`,\n      {\n        params: {\n          api_key: this.#KEY_API,\n        },\n      }\n    );\n\n    return response;\n  }\n\n  async fetchSearchMovie(searchQuery) {\n    this.query = searchQuery;\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: this.#KEY_API,\n        query: this.query,\n      },\n    });\n\n    return response;\n  }\n\n  async fetchMovieById(movieId) {\n    const ID = Number(movieId);\n    const response = await axios.get(`movie/${ID}`, {\n      params: {\n        api_key: this.#KEY_API,\n      },\n    });\n\n    return response;\n  }\n\n  async fetchCast(id) {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: this.#KEY_API,\n      },\n    });\n\n    return response;\n  }\n\n  async fetchReviews(id) {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: this.#KEY_API,\n      },\n    });\n\n    return response;\n  }\n}\n"],"names":["movieApiService","MovieApiService","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","fetchReviews","data","results","console","log","length","map","id","author","content","axios","this","params","api_key","response","searchQuery","query","ID","Number"],"sourceRoot":""}