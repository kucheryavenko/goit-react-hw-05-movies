{"version":3,"file":"static/js/247.1bc46643.chunk.js","mappings":"kOAKMA,EAAkB,IAAIC,EAAAA,EAyC5B,UAvCa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,+GAEWR,EAAgBS,UAAUJ,GAFrC,gBAEJK,EAFI,EAEJA,KACRN,EAAQM,EAAKP,MAHD,gDAKZQ,QAAQC,IAAR,MALY,yDAAH,qDAQbJ,GACD,GAAE,CAACH,KAGF,wBACGF,EAAKU,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACnC,OACE,2BACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,IAAKF,EAAY,UAtBf,mCAsBe,OAAgBA,GArB5B,gDAsBLG,IAAKJ,OAGT,uBAAIA,KACJ,uCAAeE,OARRH,EAWZ,KAGN,C,iIC3CDM,EAAAA,EAAAA,SAAAA,QAAyB,gCAAzB,0EAEanB,EAAb,wFACa,qCADb,gDAEgB,UAFhB,gDAGiB,OAHjB,qFAKE,oGACyBmB,EAAAA,EAAAA,IAAA,2BACTC,KADS,0BACWA,KADX,OAErB,CACEC,OAAQ,CACNC,SAAQ,OAACF,KAAF,SALf,cACQG,EADR,yBAUSA,GAVT,gDALF,uHAkBE,WAAuBC,GAAvB,8EACEJ,KAAKK,MAAQD,EADf,SAEyBL,EAAAA,EAAAA,IAAA,eAA0B,CAC/CE,OAAQ,CACNC,SAAQ,OAACF,KAAF,MACPK,MAAOL,KAAKK,SALlB,cAEQF,EAFR,yBASSA,GATT,gDAlBF,sHA8BE,WAAqBnB,GAArB,gFACQsB,EAAKC,OAAOvB,GADpB,SAEyBe,EAAAA,EAAAA,IAAA,gBAAmBO,GAAM,CAC9CL,OAAQ,CACNC,SAAQ,OAACF,KAAF,SAJb,cAEQG,EAFR,yBAQSA,GART,gDA9BF,iHAyCE,WAAgBV,GAAhB,uFACyBM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,YAAiC,CACtDQ,OAAQ,CACNC,SAAQ,OAACF,KAAF,SAHb,cACQG,EADR,yBAOSA,GAPT,gDAzCF,oHAmDE,WAAmBV,GAAnB,uFACyBM,EAAAA,EAAAA,IAAA,gBAAmBN,EAAnB,YAAiC,CACtDQ,OAAQ,CACNC,SAAQ,OAACF,KAAF,SAHb,cACQG,EADR,yBAOSA,GAPT,gDAnDF,6D","sources":["components/Cast/Cast.jsx","services/movieApiService.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MovieApiService } from 'services/movieApiService';\nimport { Thumb, Img } from 'components';\n\nconst movieApiService = new MovieApiService();\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const STATIC_IMG = 'https://static.hdrezka.ac/i/nopersonphoto.png';\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const { data } = await movieApiService.fetchCast(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.map(({ id, name, profile_path, character }) => {\n        return (\n          <li key={id}>\n            <Thumb>\n              <Img\n                src={profile_path ? `${IMG_URL}${profile_path}` : STATIC_IMG}\n                alt={name}\n              />\n            </Thumb>\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport class MovieApiService {\n  #KEY_API = '28d4f8ff1e1282fe32fa07ec61034261';\n  #MEDIA_TYPE = 'movie';\n  #TIME_WINDOW = 'day';\n\n  async fetchTrendingMovie() {\n    const response = await axios.get(\n      `trending/${this.#MEDIA_TYPE}/${this.#TIME_WINDOW}`,\n      {\n        params: {\n          api_key: this.#KEY_API,\n        },\n      }\n    );\n\n    return response;\n  }\n\n  async fetchSearchMovie(searchQuery) {\n    this.query = searchQuery;\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: this.#KEY_API,\n        query: this.query,\n      },\n    });\n\n    return response;\n  }\n\n  async fetchMovieById(movieId) {\n    const ID = Number(movieId);\n    const response = await axios.get(`movie/${ID}`, {\n      params: {\n        api_key: this.#KEY_API,\n      },\n    });\n\n    return response;\n  }\n\n  async fetchCast(id) {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: this.#KEY_API,\n      },\n    });\n\n    return response;\n  }\n\n  async fetchReviews(id) {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: this.#KEY_API,\n      },\n    });\n\n    return response;\n  }\n}\n"],"names":["movieApiService","MovieApiService","useState","cast","setCast","movieId","useParams","useEffect","getCast","fetchCast","data","console","log","map","id","name","profile_path","character","src","alt","axios","this","params","api_key","response","searchQuery","query","ID","Number"],"sourceRoot":""}