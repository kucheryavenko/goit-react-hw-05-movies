{"version":3,"file":"static/js/961.cb90ad88.chunk.js","mappings":"kPAMMA,EAAkB,IAAIC,EAAAA,EA6C5B,UA3CqB,WACnB,OAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAwBjB,IAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBN,EAAU,WAFO,SAGMN,EAAgBa,eAAeN,GAHrC,mBAKG,KAFZO,EAHS,EAGTA,MAECC,OALQ,wBAMfC,EAAAA,GAAAA,MAAY,kDACZV,EAAU,YAPK,2BAUjBA,EAAU,WACVF,EAAWU,GAXM,kDAajBG,QAAQC,IAAR,MACAZ,EAAU,YAdO,0DAAH,qDAkBlBM,GACD,GAAE,CAACL,IAEwB,OAAxBE,EAASU,MAAMC,KAGnB,OACE,6BACE,SAAC,KAAD,CAAMC,GAAIZ,EAASU,MAAMC,KAAzB,qBACCjB,IAAY,CAAC,GAAgB,YAAXE,IACjB,SAAC,KAAD,CAAWF,QAASA,EAASM,SAAUA,EAASU,QAEtC,YAAXd,IAAwB,SAAC,KAAD,KACzB,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { MovieApiService } from 'services/movieApiService';\nimport { MovieInfo, Loader } from 'components';\n\nconst movieApiService = new MovieApiService();\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      try {\n        setStatus('pending');\n        const { data } = await movieApiService.fetchMovieById(movieId);\n\n        if (data.length === 0) {\n          toast.error('Ooops, someting went wrong. Please, try again.');\n          setStatus('rejected');\n          return;\n        }\n        setStatus('resolve');\n        setDetails(data);\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    };\n\n    getMovieById();\n  }, [movieId]);\n\n  if (location.state.from === null) {\n    return;\n  }\n  return (\n    <main>\n      <Link to={location.state.from}>Go back</Link>\n      {details !== {} && status === 'resolve' && (\n        <MovieInfo details={details} location={location.state} />\n      )}\n      {status === 'pending' && <Loader />}\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieApiService","MovieApiService","useState","details","setDetails","status","setStatus","movieId","useParams","location","useLocation","useEffect","getMovieById","fetchMovieById","data","length","toast","console","log","state","from","to"],"sourceRoot":""}