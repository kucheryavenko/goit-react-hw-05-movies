{"version":3,"file":"static/js/278.ccdb8eb5.chunk.js","mappings":"yOAMMA,EAAkB,IAAIC,EAAAA,EAoD5B,UAlDe,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,QAArC,eAAOM,EAAP,KAAeC,EAAf,KACMC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,yFAChBH,EADgB,iEAKnBD,EAAU,WALS,SAOIT,EAAgBc,iBAAiBJ,GAPrC,mBASC,KAFZK,EAPW,EAOXA,MAECC,OATU,wBAUjBC,EAAAA,GAAAA,MAAY,kDACZR,EAAU,YAXO,2BAenBL,EAAgBW,EAAKG,SACrBT,EAAU,YAhBS,kDAkBnBU,QAAQC,IAAR,MACAX,EAAU,YAnBS,0DAAH,qDAuBpBI,GACD,GAAE,CAACH,IAOJ,GAAqB,OAAjBP,EAGJ,OACE,6BACE,SAAC,KAAD,CAAWkB,SAVU,SAAAC,GACvBf,EAAgC,KAAhBe,EAAqB,CAAEZ,MAAOY,GAAgB,CAAC,GAC/DlB,EAAgB,GACjB,IAQID,IAAiB,KAAM,SAAC,KAAD,CAAYoB,OAAQpB,IAChC,YAAXK,IAAwB,SAAC,KAAD,MAG9B,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Searchbar, ListMovies, Loader } from 'components';\nimport { MovieApiService } from 'services/movieApiService';\n\nconst movieApiService = new MovieApiService();\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState('idle');\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getSearchMovie = async () => {\n      if (!query) {\n        return;\n      }\n      try {\n        setStatus('pending');\n\n        const { data } = await movieApiService.fetchSearchMovie(query);\n\n        if (data.length === 0) {\n          toast.error('Ooops, someting went wrong. Please, try again.');\n          setStatus('rejected');\n          return;\n        }\n\n        setSearchMovies(data.results);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    };\n\n    getSearchMovie();\n  }, [query]);\n\n  const handleFormSubmit = searchQuery => {\n    setSearchParams(searchQuery !== '' ? { query: searchQuery } : {});\n    setSearchMovies([]);\n  };\n\n  if (searchMovies === null) {\n    return;\n  }\n  return (\n    <main>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {searchMovies !== [] && <ListMovies movies={searchMovies} />}\n      {status === 'pending' && <Loader />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["movieApiService","MovieApiService","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","status","setStatus","query","get","useEffect","getSearchMovie","fetchSearchMovie","data","length","toast","results","console","log","onSubmit","searchQuery","movies"],"sourceRoot":""}